---
- name: Sanity check required variables
  ansible.builtin.assert:
    that:
      - jenkins_config_group != ''
      - jenkins_config_owner != ''
      - jenkins_controller_url != ''
      - jenkins_swarm_home != ''
    quiet: true

- name: Assert that Swarm Client version is defined
  ansible.builtin.assert:
    that: >
      (jenkins_plugins_file != "" and jenkins_swarm_client_version == "") or
      (jenkins_plugins_file == "" and jenkins_swarm_client_version != "")
    quiet: true

- name: Include Unix-specific defaults
  ansible.builtin.include_vars: "{{ role_path }}/vars/unix.yml"
  when: ansible_os_family != "Windows"

- name: Include Windows-specific defaults
  ansible.builtin.include_vars: "{{ role_path }}/vars/windows.yml"
  when: ansible_os_family == "Windows"

- name: Set java_exe for Unix hosts
  ansible.builtin.set_fact:
    java_exe: "{{ jenkins_java_exe | default('/usr/bin/java', true) }}"
  when: ansible_os_family != "Windows"

- name: See if Java is present for Unix hosts
  ansible.builtin.command: "{{ java_exe }} -version"
  changed_when: false
  # We'll assert in the following task to display a nicer error message
  ignore_errors: true
  register: java_version
  when: ansible_os_family != "Windows"

- name: Set java_exe for Windows hosts
  ansible.builtin.set_fact:
    java_exe: "{{ jenkins_java_exe | default('java.exe', true) }}"
  when: ansible_os_family == "Windows"

- name: See if Java is present in the default PATH for Windows hosts
  ansible.windows.win_command: "{{ java_exe }} -version"
  changed_when: false
  # We'll assert in the following task to display a nicer error message
  ignore_errors: true
  register: java_version
  when: ansible_os_family == "Windows"

- name: Assert that Java is present in the default PATH
  ansible.builtin.assert:
    that: java_version is succeeded
    quiet: true
    fail_msg: "{{ java_exe }} was not found or cannot be executed"
