---
- name: Include platform-specific defaults
  ansible.builtin.include_vars: "{{ role_path }}/vars/{{ ansible_os_family | lower }}.yml"

- name: Include unix-specific defaults
  ansible.builtin.include_vars: "{{ role_path }}/vars/unix.yml"

- name: Read service PID file
  ansible.builtin.slurp:
    src: "{{ jenkins_swarm_pid_file }}"
  failed_when: false
  register: service_pid_file

- name: Check if service is running
  ansible.builtin.command: "ps -p {{ service_pid_file.content | b64decode }}"
  changed_when: false
  register: swarm_client_running
  failed_when: false
  when: service_pid_file.content is defined

- name: Initialize should_start_swarm_client fact
  ansible.builtin.set_fact:
    should_start_swarm_client: >
      service_pid_file.content is not defined or swarm_client_running.rc != 0

- name: Start launchctl service
  when: should_start_swarm_client
  block:
    - name: Get UID for jenkins_config_owner user
      ansible.builtin.command: "id -u {{ jenkins_config_owner }}"
      changed_when: false
      register: uid

    - name: Include tasks to enable service
      ansible.builtin.include_tasks: "darwin/enable-service.yml"

    - name: Set jenkins_swarm_client_launchd_plist fact
      ansible.builtin.include_tasks: "set-launchd-plist.yml"

    - name: Start launchctl service
      ansible.builtin.command: >
        launchctl bootstrap gui/{{ uid.stdout }} {{ jenkins_swarm_client_launchd_plist }}
      changed_when: true

    - name: Read PID file
      ansible.builtin.slurp:
        src: "{{ jenkins_swarm_pid_file }}"
      register: service_pid_file
      until: service_pid_file is succeeded
      delay: 1
      retries: 10

    - name: Assert that service is running
      ansible.builtin.command: "ps -p {{ service_pid_file.content | b64decode }}"
      changed_when: false
