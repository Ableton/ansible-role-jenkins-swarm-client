---
- name: Include platform-specific defaults
  include_vars: "{{ role_path }}/vars/{{ ansible_os_family | lower }}.yml"

- name: Run user setup tasks
  include_tasks: "{{ role_path }}/tasks/windows/add-jenkins-user.yml"

- name: Check if reboot is necessary
  set_fact:
    chocolatey_reboot_necessary: false

- name: Ensure chocolatey is installed
  win_chocolatey:
    name: chocolatey
    state: present

- name: Install Chocolatey packages
  win_chocolatey:
    name: "{{ item.key }}"
    install_args: "{{ item.value.install_args | default('') }}"
    params: "{{ item.value.params | default('') }}"
    allow_prerelease: "{{ item.value.allow_prerelease | default(false) }}"
    version: "{{ item.value.version | default('') }}"
    state: present
  with_dict: "{{ jenkins_node_packages }}"
  register: chocolatey_result
  # Error code 3010 means that a reboot is necessary following installation of the
  # package.
  failed_when: >
    chocolatey_result.rc is defined and
    chocolatey_result.rc != 0 and
    chocolatey_result.rc != 3010

- name: Check if reboot is necessary
  set_fact:
    chocolatey_reboot_necessary: true
  when: item.rc is defined and item.rc == 3010
  with_items: "{{ chocolatey_result.results }}"

# When using SSH, changes to the PATH made by chocolatey package installations don't seem
# to take effect until reboot.
- name: Reboot if packages were installed and connection protocol is SSH
  set_fact:
    chocolatey_reboot_necessary: true
  when: ansible_connection == "ssh" and chocolatey_result is changed

- name: Reboot Windows host
  win_shell: Restart-Computer -Force
  when: chocolatey_reboot_necessary

- name: Wait for host to come back online
  wait_for_connection:
    delay: 10
  when: chocolatey_reboot_necessary

- name: Ensure Jenkins working directory exists
  win_file:
    path: "{{ jenkins_swarm_home }}"
    state: directory

- name: Write labels to file
  win_template:
    src: "{{ role_path }}/templates/labels.txt.j2"
    dest: "{{ jenkins_swarm_labels_file }}"

- name: Download Swarm Client JAR
  win_get_url:
    url: "https://repo.jenkins-ci.org/releases/org/jenkins-ci/plugins/swarm-client\
      /{{ jenkins_swarm_client_version }}\
      /swarm-client-{{ jenkins_swarm_client_version }}.jar"
    dest: "{{ jenkins_swarm_jar_path }}"

- name: Copy logging properties file
  win_copy:
    src: "{{ role_path }}/files/logging.properties"
    dest: "{{ jenkins_swarm_logging_properties }}"

# It is necessary for us to remove and re-create this service since NSSM will fail with an
# error when creating the service if it already exists. This could be mitigated by adding
# "ignore_errors: true" to the service creation step, but I would prefer to recreate the
# service rather than suppress any errors which may occur while creating it. Also, we need
# to make sure that if the arguments in jenkins_swarm_cmd change then they are added to
# the NSSM service.
- name: Remove Windows service
  win_service:
    name: "{{ jenkins_swarm_service_name }}"
    state: absent
  ignore_errors: true

- name: Assemble full command arguments
  set_fact:
    jenkins_swarm_full_args: "{{ jenkins_swarm_args + jenkins_swarm_extra_args }}"

- name: Get absolute path to Java executable
  win_shell:  "Get-Command {{ java_exe }} | Select-Object 'Source' | \
    Format-Wide -AutoSize"
  changed_when: false
  register: get_command_java

- name: Create Windows service with NSSM
  win_nssm:
    name: "{{ jenkins_swarm_service_name }}"
    application: "{{ get_command_java.stdout | trim }}"
    arguments: "{{ jenkins_swarm_full_args }}"
    description: "Jenkins Swarm Client"
    working_directory: "{{ jenkins_swarm_home }}"
    state: stopped

- name: Set Jenkins Swarm Client to run as Jenkins user
  win_shell: >
    nssm.exe set \
      '{{ jenkins_swarm_service_name }}' \
      ObjectName .\\{{ jenkins_config_owner }} {{ jenkins_user_password }}
