---
- name: Include default variables
  include_vars: "{{ role_path }}/defaults/{{ ansible_os_family | lower }}.yml"

- name: Install Chocolatey packages
  action: win_chocolatey name={{item}} state=present
  with_items: "{{ jenkins_node_packages }}"

# TODO: Can this file be combined with unix/install.yml?
# It's exactly the same logic, except that the Windows one
# uses the win_* modules. Maybe the generic "action" module
# would solve this problem.
- name: Ensure Jenkins working directory exists
  win_file:
    path: "{{ jenkins_swarm_home }}"
    state: directory

- name: Write labels to file
  win_template:
    src: "{{ role_path }}/files/labels.txt.j2"
    dest: "{{ jenkins_swarm_labels_file }}"

- name: Copy swarm plugin client
  win_copy:
    src: "{{ role_path }}/files/{{ jenkins_swarm_jar }}"
    dest: "{{ jenkins_swarm_jar_path }}"

# TODO: Is this really necessary?
# I recall that NSSM would freak out if you tried to create a service with
# the same name, I don't think that it supports overwriting a service in
# this manner. That is bad news if the arguments should change between
# deployments.
- name: Remove Windows service
  win_service:
    name: "{{ jenkins_swarm_service_name }}"
    state: absent
  ignore_errors: true

- name: Create Windows service with NSSM
  win_shell: >
    nssm.exe install \
      '{{ jenkins_swarm_service_name }}' \
      {{ jenkins_swarm_cmd | join(" ") }}

- name: Set service startup directory
  win_shell: >
    nssm.exe set \
      '{{ jenkins_swarm_service_name }}' \
      AppDirectory  {{ jenkins_swarm_home }}
